/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import javax.swing.JOptionPane;
import listairport.edd.DoubleLinkedList;
import listairport.edd.ListStation;
import listairport.edd.Queue;

/**
 *
 * @author zofia
 */
public class PrincipalFrame extends javax.swing.JFrame {
    private int turn;
    private int turnQuantity = 0;
    private int planes;
    private int stations;
    private int i = 1;
    private int iterator;
    private DoubleLinkedList planesList;
    private static Queue passengersList;
    private Queue planesQueue;
    private ListStation stationsList;
    private boolean initialized = false;
    private static final int ELIMINATED_PASSENGERS = 5;
    /**
     * Creates new form PrincipalFrame
     */
    public PrincipalFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        terminal = new javax.swing.JTextArea();
        planeField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        terminalField = new javax.swing.JTextField();
        startButton = new javax.swing.JButton();
        turnButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ListAirport");
        setBackground(new java.awt.Color(204, 204, 204));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        terminal.setBackground(new java.awt.Color(0, 0, 0));
        terminal.setColumns(20);
        terminal.setFont(new java.awt.Font("Lucida Bright", 0, 14)); // NOI18N
        terminal.setForeground(new java.awt.Color(102, 153, 255));
        terminal.setRows(5);
        jScrollPane1.setViewportView(terminal);

        jLabel1.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Planes:");

        jLabel2.setFont(new java.awt.Font("Lucida Bright", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Stations:");

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        turnButton.setText("Next Turn");
        turnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                turnButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(planeField, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(terminalField, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addComponent(startButton)
                .addGap(85, 85, 85)
                .addComponent(turnButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(planeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(terminalField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(turnButton)
                    .addComponent(startButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void turnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_turnButtonActionPerformed
        // TODO add your handling code here:
        if(!initialized) {
            addAirplanes();			
            turn++;						
            imprimir();
            initialized = true;
            return ;
        }
            planesList.decreace();
			     stationsList.decreace();
//			sacaPasajeros();			
			addAirplanes();			
			turn++;						
			imprimir();       
			for (int i = 0; i < 5; i++) {
//				planesList.eliminaAvion(cAvion);
				stationsList.decreace();
//				cAvion.pasarMantenimiento(lMantenimiento);
			}
			
		
    }//GEN-LAST:event_turnButtonActionPerformed

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        // TODO add your handling code here:
        turn=0;
        i = 1;
        terminal.setText("");
        planesList = new DoubleLinkedList();
        passengersList = new Queue();
//        lMaletas = new ListaMaletas();
        stationsList = new ListStation();
//        cAvion = new ColaAvion();
        try {
                planes = Integer.parseInt(planeField.getText());
                stations = Integer.parseInt(terminalField.getText());
                addStations();
        }
        catch(NumberFormatException ex) {
                JOptionPane.showMessageDialog(null, "Unicamente se permiten numeros","ERROR",JOptionPane.ERROR_MESSAGE);
        }
        
	
    }//GEN-LAST:event_startButtonActionPerformed

    public void addAirplanes() {		
        if(planes > 0) {			
            planesList.addAirplane();
            i++;
            planes--;
            planesList.recorrer();
//			agregarMaletas();
        }									
    }
    
    public static void addPassengers() {
        
       passengersList.initializePassengers();
    }
    
    public void addStations() {
        while(stations != 0) {
            stationsList.initialize();
            stations--;
        }
    }
    
    public void eliminatePassengers() throws Exception {
        for (int j = 0; j == ELIMINATED_PASSENGERS; j++) {
            passengersList.deQueue();
        }
    }
    
    public void imprimir() {
        terminal.append("\n*************TURNO " + turn + "*************\n"
                        + "----------- AVIONES -----------\n");
                        planesList.printList(terminal);
        terminal.append("----------- PASAJEROS -----------\n");
        passengersList.printPassenger(terminal);
        terminal.append("---------MALETAS---------\n");
//		lMaletas.printMaletas(aConsola);
        terminal.append("\n---------ESTACIONES---------\n");
        stationsList.print(terminal);
        terminal.append("\n---------COLA---------\n");
//		cAvion.printColaAviones(aConsola);
        terminal.append("\n+++++++++++++++++ FIN TURNO " + turn + "++++++++++++++++\n");
}

    public void validateEmptyness() throws Exception {
        if(planesList.isEmpty() && passengersList.isEmpty() ) {
            throw new Exception("Simulacion finalizada");
            }
    }
    
    public void validateSpaces() throws Exception {
        if(planeField.getText().isEmpty() || terminalField.getText().isEmpty()) {
            throw new Exception("Rellene todos los campos necesarios");
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrincipalFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrincipalFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrincipalFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrincipalFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrincipalFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField planeField;
    private javax.swing.JButton startButton;
    private javax.swing.JTextArea terminal;
    private javax.swing.JTextField terminalField;
    private javax.swing.JButton turnButton;
    // End of variables declaration//GEN-END:variables
}
